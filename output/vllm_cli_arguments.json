{
  "arguments": {
    "--api-server-count": {
      "long_name": "--api-server-count",
      "short_name": null,
      "description": "API_SERVER_COUNT, -asc API_SERVER_COUNT How many API server processes to run.",
      "default_value": 1,
      "arg_type": "integer",
      "choices": null,
      "is_flag": false,
      "section": "options",
      "required": false
    },
    "--config": {
      "long_name": "--config",
      "short_name": null,
      "description": "CONFIG       Read CLI options from a config file. Must be a YAML with the following options: https://docs.vllm.ai/en/la test/configuration/serve_args.html",
      "default_value": null,
      "arg_type": "json",
      "choices": null,
      "is_flag": false,
      "section": "options",
      "required": false
    },
    "--disable-log-requests": {
      "long_name": "--disable-log-requests",
      "short_name": null,
      "description": "--no-disable-log-requests [DEPRECATED] Disable logging requests.",
      "default_value": true,
      "arg_type": "boolean",
      "choices": null,
      "is_flag": true,
      "section": "options",
      "required": false
    },
    "--disable-log-stats": {
      "long_name": "--disable-log-stats",
      "short_name": null,
      "description": "Disable logging statistics.",
      "default_value": false,
      "arg_type": "boolean",
      "choices": null,
      "is_flag": true,
      "section": "options",
      "required": false
    },
    "--enable-log-requests": {
      "long_name": "--enable-log-requests",
      "short_name": null,
      "description": "--no-enable-log-requests Enable logging requests.",
      "default_value": false,
      "arg_type": "boolean",
      "choices": null,
      "is_flag": true,
      "section": "options",
      "required": false
    },
    "--enable-prompt-adapter": {
      "long_name": "--enable-prompt-adapter",
      "short_name": null,
      "description": "[DEPRECATED] Prompt adapter has been removed. Setting this flag to True or False has no effect on vLLM behavior.",
      "default_value": false,
      "arg_type": "boolean",
      "choices": null,
      "is_flag": true,
      "section": "options",
      "required": false
    },
    "--headless": {
      "long_name": "--headless",
      "short_name": null,
      "description": "Run in headless mode. See multi-node data parallel documentation for more details.",
      "default_value": false,
      "arg_type": "boolean",
      "choices": null,
      "is_flag": true,
      "section": "options",
      "required": false
    },
    "--allow-credentials": {
      "long_name": "--allow-credentials",
      "short_name": null,
      "description": "--no-allow-credentials Allow credentials.",
      "default_value": false,
      "arg_type": "boolean",
      "choices": null,
      "is_flag": true,
      "section": "frontend",
      "required": false
    },
    "--allowed-headers": {
      "long_name": "--allowed-headers",
      "short_name": null,
      "description": "ALLOWED_HEADERS Allowed headers.",
      "default_value": [
        "*"
      ],
      "arg_type": "list",
      "choices": null,
      "is_flag": false,
      "section": "frontend",
      "required": false
    },
    "--allowed-methods": {
      "long_name": "--allowed-methods",
      "short_name": null,
      "description": "ALLOWED_METHODS Allowed methods.",
      "default_value": [
        "*"
      ],
      "arg_type": "list",
      "choices": null,
      "is_flag": false,
      "section": "frontend",
      "required": false
    },
    "--allowed-origins": {
      "long_name": "--allowed-origins",
      "short_name": null,
      "description": "ALLOWED_ORIGINS Allowed origins.",
      "default_value": [
        "*"
      ],
      "arg_type": "list",
      "choices": null,
      "is_flag": false,
      "section": "frontend",
      "required": false
    },
    "--api-key": {
      "long_name": "--api-key",
      "short_name": null,
      "description": "API_KEY [API_KEY ...] If provided, the server will require one of these keys to be presented in the header.",
      "default_value": null,
      "arg_type": "list",
      "choices": null,
      "is_flag": false,
      "section": "frontend",
      "required": false
    },
    "--chat-template": {
      "long_name": "--chat-template",
      "short_name": null,
      "description": "CHAT_TEMPLATE The file path to the chat template, or the template in single-line form for the specified model.",
      "default_value": null,
      "arg_type": "string",
      "choices": null,
      "is_flag": false,
      "section": "frontend",
      "required": false
    },
    "--chat-template-content-format": {
      "long_name": "--chat-template-content-format",
      "short_name": null,
      "description": "{auto,openai,string} The format to render message content within a chat template. * \"string\" will render the content as a string. Example: `\"Hello World\"` * \"openai\" will render the content as a list of dictionaries, similar to OpenAI schema. Example: `[{\"type\": \"text\", \"text\": \"Hello world!\"}]`",
      "default_value": "auto",
      "arg_type": "choice",
      "choices": [
        "auto",
        "openai",
        "string"
      ],
      "is_flag": false,
      "section": "frontend",
      "required": false
    },
    "--disable-fastapi-docs": {
      "long_name": "--disable-fastapi-docs",
      "short_name": null,
      "description": "--no-disable-fastapi-docs Disable FastAPI's OpenAPI schema, Swagger UI, and ReDoc endpoint.",
      "default_value": false,
      "arg_type": "boolean",
      "choices": null,
      "is_flag": true,
      "section": "frontend",
      "required": false
    },
    "--disable-frontend-multiprocessing": {
      "long_name": "--disable-frontend-multiprocessing",
      "short_name": null,
      "description": "--no-disable-frontend-multiprocessing If specified, will run the OpenAI frontend server in the same process as the model serving engine.",
      "default_value": false,
      "arg_type": "boolean",
      "choices": null,
      "is_flag": true,
      "section": "frontend",
      "required": false
    },
    "--disable-uvicorn-access-log": {
      "long_name": "--disable-uvicorn-access-log",
      "short_name": null,
      "description": "--no-disable-uvicorn-access-log Disable uvicorn access log.",
      "default_value": false,
      "arg_type": "boolean",
      "choices": null,
      "is_flag": true,
      "section": "frontend",
      "required": false
    },
    "--enable-auto-tool-choice": {
      "long_name": "--enable-auto-tool-choice",
      "short_name": null,
      "description": "--no-enable-auto-tool-choice If specified, exclude tool definitions in prompts when tool_choice='none'.",
      "default_value": false,
      "arg_type": "boolean",
      "choices": null,
      "is_flag": true,
      "section": "frontend",
      "required": false
    },
    "--enable-force-include-usage": {
      "long_name": "--enable-force-include-usage",
      "short_name": null,
      "description": "--no-enable-force-include-usage If set to True, including usage on every request.",
      "default_value": false,
      "arg_type": "boolean",
      "choices": null,
      "is_flag": true,
      "section": "frontend",
      "required": false
    },
    "--enable-log-outputs": {
      "long_name": "--enable-log-outputs",
      "short_name": null,
      "description": "--no-enable-log-outputs If set to True, enable logging of model outputs (generations)  in addition to the input logging that is enabled by default.",
      "default_value": false,
      "arg_type": "boolean",
      "choices": null,
      "is_flag": true,
      "section": "frontend",
      "required": false
    },
    "--enable-prompt-tokens-details": {
      "long_name": "--enable-prompt-tokens-details",
      "short_name": null,
      "description": "--no-enable-prompt-tokens-details If set to True, enable prompt_tokens_details in usage.",
      "default_value": false,
      "arg_type": "boolean",
      "choices": null,
      "is_flag": true,
      "section": "frontend",
      "required": false
    },
    "--enable-request-id-headers": {
      "long_name": "--enable-request-id-headers",
      "short_name": null,
      "description": "--no-enable-request-id-headers If specified, API server will add X-Request-Id header to responses. Caution: this hurts performance at high QPS.",
      "default_value": false,
      "arg_type": "boolean",
      "choices": null,
      "is_flag": true,
      "section": "frontend",
      "required": false
    },
    "--enable-server-load-tracking": {
      "long_name": "--enable-server-load-tracking",
      "short_name": null,
      "description": "--no-enable-server-load-tracking If set to True, enable tracking server_load_metrics in the app state.",
      "default_value": false,
      "arg_type": "boolean",
      "choices": null,
      "is_flag": true,
      "section": "frontend",
      "required": false
    },
    "--enable-ssl-refresh": {
      "long_name": "--enable-ssl-refresh",
      "short_name": null,
      "description": "--no-enable-ssl-refresh Refresh SSL Context when SSL certificate files change",
      "default_value": false,
      "arg_type": "boolean",
      "choices": null,
      "is_flag": true,
      "section": "frontend",
      "required": false
    },
    "--enable-tokenizer-info-endpoint": {
      "long_name": "--enable-tokenizer-info-endpoint",
      "short_name": null,
      "description": "--no-enable-tokenizer-info-endpoint Enable the /get_tokenizer_info endpoint. May expose chat templates and other tokenizer configuration.",
      "default_value": false,
      "arg_type": "boolean",
      "choices": null,
      "is_flag": true,
      "section": "frontend",
      "required": false
    },
    "--exclude-tools-when-tool-choice-none": {
      "long_name": "--exclude-tools-when-tool-choice-none",
      "short_name": null,
      "description": "--no-exclude-tools-when-tool-choice-none Enable auto tool choice for supported models. Use `--tool-call-parser` to specify which parser to use.",
      "default_value": false,
      "arg_type": "boolean",
      "choices": null,
      "is_flag": true,
      "section": "frontend",
      "required": false
    },
    "--h11-max-header-count": {
      "long_name": "--h11-max-header-count",
      "short_name": null,
      "description": "H11_MAX_HEADER_COUNT Maximum number of HTTP headers allowed in a request for h11 parser. Helps mitigate header abuse. Default: 256.",
      "default_value": 256,
      "arg_type": "integer",
      "choices": null,
      "is_flag": false,
      "section": "frontend",
      "required": false
    },
    "--h11-max-incomplete-event-size": {
      "long_name": "--h11-max-incomplete-event-size",
      "short_name": null,
      "description": "H11_MAX_INCOMPLETE_EVENT_SIZE Maximum size (bytes) of an incomplete HTTP event (header or body) for h11 parser. Helps mitigate header abuse. Default: 4194304 (4 MB).",
      "default_value": 4194304,
      "arg_type": "integer",
      "choices": null,
      "is_flag": false,
      "section": "frontend",
      "required": false
    },
    "--host": {
      "long_name": "--host",
      "short_name": null,
      "description": "HOST           Host name.",
      "default_value": null,
      "arg_type": "string",
      "choices": null,
      "is_flag": false,
      "section": "frontend",
      "required": false
    },
    "--log-config-file": {
      "long_name": "--log-config-file",
      "short_name": null,
      "description": "LOG_CONFIG_FILE Path to logging config JSON file for both vllm and uvicorn",
      "default_value": null,
      "arg_type": "json",
      "choices": null,
      "is_flag": false,
      "section": "frontend",
      "required": false
    },
    "--lora-modules": {
      "long_name": "--lora-modules",
      "short_name": null,
      "description": "LORA_MODULES [LORA_MODULES ...] LoRA modules configurations in either 'name=path' format or JSON format or JSON list format. Example (old format): `'name=path'` Example (new format): `{\"name\": \"name\", \"path\": \"lora_path\", \"base_model_name\": \"id\"}`",
      "default_value": null,
      "arg_type": "choice",
      "choices": [
        "\"name\": \"name\"",
        "\"path\": \"lora_path\"",
        "\"base_model_name\": \"id\""
      ],
      "is_flag": false,
      "section": "frontend",
      "required": false
    },
    "--max-log-len": {
      "long_name": "--max-log-len",
      "short_name": null,
      "description": "MAX_LOG_LEN Max number of prompt characters or prompt ID numbers being printed in log. The default of None means unlimited.",
      "default_value": null,
      "arg_type": "integer",
      "choices": null,
      "is_flag": false,
      "section": "frontend",
      "required": false
    },
    "--middleware": {
      "long_name": "--middleware",
      "short_name": null,
      "description": "MIDDLEWARE Additional ASGI middleware to apply to the app. We accept multiple --middleware arguments. The value should be an import path. If a function is provided, vLLM will add it to the server using `@app.middleware('http')`. If a class is provided, vLLM will add it to the server using `app.add_middleware()`.",
      "default_value": [],
      "arg_type": "list",
      "choices": null,
      "is_flag": false,
      "section": "frontend",
      "required": false
    },
    "--port": {
      "long_name": "--port",
      "short_name": null,
      "description": "PORT           Port number.",
      "default_value": 8000,
      "arg_type": "integer",
      "choices": null,
      "is_flag": false,
      "section": "frontend",
      "required": false
    },
    "--response-role": {
      "long_name": "--response-role",
      "short_name": null,
      "description": "RESPONSE_ROLE The role name to return if `request.add_generation_prompt=true`.",
      "default_value": "assistant",
      "arg_type": "float",
      "choices": null,
      "is_flag": false,
      "section": "frontend",
      "required": false
    },
    "--return-tokens-as-token-ids": {
      "long_name": "--return-tokens-as-token-ids",
      "short_name": null,
      "description": "--no-return-tokens-as-token-ids When `--max-logprobs` is specified, represents single tokens as strings of the form 'token_id:{token_id}' so that tokens that are not JSON-encodable can be identified.",
      "default_value": false,
      "arg_type": "choice",
      "choices": [
        "token_id"
      ],
      "is_flag": false,
      "section": "frontend",
      "required": false
    },
    "--root-path": {
      "long_name": "--root-path",
      "short_name": null,
      "description": "ROOT_PATH FastAPI root_path when app is behind a path based routing proxy.",
      "default_value": null,
      "arg_type": "string",
      "choices": null,
      "is_flag": false,
      "section": "frontend",
      "required": false
    },
    "--ssl-ca-certs": {
      "long_name": "--ssl-ca-certs",
      "short_name": null,
      "description": "SSL_CA_CERTS The CA certificates file.",
      "default_value": null,
      "arg_type": "list",
      "choices": null,
      "is_flag": false,
      "section": "frontend",
      "required": false
    },
    "--ssl-cert-reqs": {
      "long_name": "--ssl-cert-reqs",
      "short_name": null,
      "description": "SSL_CERT_REQS Whether client certificate is required (see stdlib ssl module's).",
      "default_value": 0,
      "arg_type": "list",
      "choices": null,
      "is_flag": false,
      "section": "frontend",
      "required": false
    },
    "--ssl-certfile": {
      "long_name": "--ssl-certfile",
      "short_name": null,
      "description": "SSL_CERTFILE The file path to the SSL cert file.",
      "default_value": null,
      "arg_type": "string",
      "choices": null,
      "is_flag": false,
      "section": "frontend",
      "required": false
    },
    "--ssl-keyfile": {
      "long_name": "--ssl-keyfile",
      "short_name": null,
      "description": "SSL_KEYFILE The file path to the SSL key file.",
      "default_value": null,
      "arg_type": "string",
      "choices": null,
      "is_flag": false,
      "section": "frontend",
      "required": false
    },
    "--tool-call-parser": {
      "long_name": "--tool-call-parser",
      "short_name": null,
      "description": "{deepseek_v3,glm45,granite-20b-fc,granite,hermes,hunyuan_a13b,internlm,jamba,kimi_k2,llama4_pythonic,llama4_json,llama3_json,minimax,mistral,phi4_mini_json,pythonic,qwen3_coder,step3,xlam} or name registered in --tool-parser-plugin Select the tool call parser depending on the model that you're using. This is used to parse the model- generated tool call into OpenAI API format. Required for `--enable-auto-tool-choice`. You can choose any option from the built-in parsers or register a plugin via `--tool-parser-plugin`.",
      "default_value": null,
      "arg_type": "choice",
      "choices": [
        "deepseek_v3",
        "glm45",
        "granite-20b-fc",
        "granite",
        "hermes",
        "hunyuan_a13b",
        "internlm",
        "jamba",
        "kimi_k2",
        "llama4_pythonic",
        "llama4_json",
        "llama3_json",
        "minimax",
        "mistral",
        "phi4_mini_json",
        "pythonic",
        "qwen3_coder",
        "step3",
        "xlam"
      ],
      "is_flag": false,
      "section": "frontend",
      "required": false
    },
    "--tool-parser-plugin": {
      "long_name": "--tool-parser-plugin",
      "short_name": null,
      "description": "TOOL_PARSER_PLUGIN Special the tool parser plugin write to parse the model-generated tool into OpenAI API format, the name register in this plugin can be used in `--tool-call- parser`.",
      "default_value": "",
      "arg_type": "string",
      "choices": null,
      "is_flag": false,
      "section": "frontend",
      "required": false
    },
    "--tool-server": {
      "long_name": "--tool-server",
      "short_name": null,
      "description": "TOOL_SERVER Comma-separated list of host:port pairs (IPv4, IPv6, or hostname). Examples: 127.0.0.1:8000, [::1]:8000, localhost:1234. Or `demo` for demo purpose.",
      "default_value": null,
      "arg_type": "list",
      "choices": null,
      "is_flag": false,
      "section": "frontend",
      "required": false
    },
    "--uds": {
      "long_name": "--uds",
      "short_name": null,
      "description": "UDS             Unix domain socket path. If set, host and port arguments are ignored.",
      "default_value": null,
      "arg_type": "list",
      "choices": null,
      "is_flag": false,
      "section": "frontend",
      "required": false
    },
    "--uvicorn-log-level": {
      "long_name": "--uvicorn-log-level",
      "short_name": null,
      "description": "{critical,debug,error,info,trace,warning} Log level for uvicorn.",
      "default_value": "info",
      "arg_type": "choice",
      "choices": [
        "critical",
        "debug",
        "error",
        "info",
        "trace",
        "warning"
      ],
      "is_flag": false,
      "section": "frontend",
      "required": false
    },
    "--allowed-local-media-path": {
      "long_name": "--allowed-local-media-path",
      "short_name": null,
      "description": "ALLOWED_LOCAL_MEDIA_PATH Allowing API requests to read local images or videos from directories specified by the server file system. This is a security risk. Should only be enabled in trusted environments.",
      "default_value": "",
      "arg_type": "boolean",
      "choices": null,
      "is_flag": true,
      "section": "modelconfig",
      "required": false
    },
    "--code-revision": {
      "long_name": "--code-revision",
      "short_name": null,
      "description": "CODE_REVISION The specific revision to use for the model code on the Hugging Face Hub. It can be a branch name, a tag name, or a commit id. If unspecified, will use the default version.",
      "default_value": null,
      "arg_type": "string",
      "choices": null,
      "is_flag": false,
      "section": "modelconfig",
      "required": false
    },
    "--config-format": {
      "long_name": "--config-format",
      "short_name": null,
      "description": "{auto,hf,mistral} The format of the model config to load: - \"auto\" will try to load the config in hf format if available else it will try to load in mistral format. - \"hf\" will load the config in hf format. - \"mistral\" will load the config in mistral format.",
      "default_value": "auto",
      "arg_type": "choice",
      "choices": [
        "auto",
        "hf",
        "mistral"
      ],
      "is_flag": false,
      "section": "modelconfig",
      "required": false
    },
    "--convert": {
      "long_name": "--convert",
      "short_name": null,
      "description": "{auto,classify,embed,none,reward} Convert the model using adapters defined in [vllm.model_executor.models.adapters][]. The most common use case is to adapt a text generation model to be used for pooling tasks.",
      "default_value": "auto",
      "arg_type": "choice",
      "choices": [
        "auto",
        "classify",
        "embed",
        "none",
        "reward"
      ],
      "is_flag": false,
      "section": "modelconfig",
      "required": false
    },
    "--disable-async-output-proc": {
      "long_name": "--disable-async-output-proc",
      "short_name": null,
      "description": "Disable async output processing. This may result in lower performance.",
      "default_value": false,
      "arg_type": "boolean",
      "choices": null,
      "is_flag": true,
      "section": "modelconfig",
      "required": false
    },
    "--disable-cascade-attn": {
      "long_name": "--disable-cascade-attn",
      "short_name": null,
      "description": "--no-disable-cascade-attn Disable cascade attention for V1. While cascade attention does not change the mathematical correctness, disabling it could be useful for preventing potential numerical issues. Note that even if this is set to False, cascade attention will be only used when the heuristic tells that it's beneficial.",
      "default_value": false,
      "arg_type": "boolean",
      "choices": null,
      "is_flag": true,
      "section": "modelconfig",
      "required": false
    },
    "--disable-sliding-window": {
      "long_name": "--disable-sliding-window",
      "short_name": null,
      "description": "--no-disable-sliding-window Whether to disable sliding window. If True, we will disable the sliding window functionality of the model, capping to sliding window size. If the model does not support sliding window, this argument is ignored.",
      "default_value": false,
      "arg_type": "boolean",
      "choices": null,
      "is_flag": true,
      "section": "modelconfig",
      "required": false
    },
    "--dtype": {
      "long_name": "--dtype",
      "short_name": null,
      "description": "{auto,bfloat16,float,float16,float32,half} Data type for model weights and activations: - \"auto\" will use FP16 precision for FP32 and FP16 models, and BF16 precision for BF16 models. - \"half\" for FP16. Recommended for AWQ quantization. - \"float16\" is the same as \"half\". - \"bfloat16\" for a balance between precision and range. - \"float\" is shorthand for FP32 precision. - \"float32\" for FP32 precision.",
      "default_value": "auto",
      "arg_type": "choice",
      "choices": [
        "auto",
        "bfloat16",
        "float",
        "float16",
        "float32",
        "half"
      ],
      "is_flag": false,
      "section": "modelconfig",
      "required": false
    },
    "--enable-prompt-embeds": {
      "long_name": "--enable-prompt-embeds",
      "short_name": null,
      "description": "--no-enable-prompt-embeds If `True`, enables passing text embeddings as inputs via the `prompt_embeds` key. Note that enabling this will double the time required for graph compilation.",
      "default_value": false,
      "arg_type": "boolean",
      "choices": null,
      "is_flag": true,
      "section": "modelconfig",
      "required": false
    },
    "--enable-sleep-mode": {
      "long_name": "--enable-sleep-mode",
      "short_name": null,
      "description": "--no-enable-sleep-mode Enable sleep mode for the engine (only cuda platform is supported).",
      "default_value": false,
      "arg_type": "boolean",
      "choices": null,
      "is_flag": true,
      "section": "modelconfig",
      "required": false
    },
    "--enforce-eager": {
      "long_name": "--enforce-eager",
      "short_name": null,
      "description": "--no-enforce-eager Whether to always use eager-mode PyTorch. If True, we will disable CUDA graph and always execute the model in eager mode. If False, we will use CUDA graph and eager execution in hybrid for maximal performance and flexibility.",
      "default_value": false,
      "arg_type": "boolean",
      "choices": null,
      "is_flag": true,
      "section": "modelconfig",
      "required": false
    },
    "--generation-config": {
      "long_name": "--generation-config",
      "short_name": null,
      "description": "GENERATION_CONFIG The folder path to the generation config. Defaults to `\"auto\"`, the generation config will be loaded from model path. If set to `\"vllm\"`, no generation config is loaded, vLLM defaults will be used. If set to a folder path, the generation config will be loaded from the specified folder path. If `max_new_tokens` is specified in generation config, then it sets a server- wide limit on the number of output tokens for all requests.",
      "default_value": "auto",
      "arg_type": "json",
      "choices": null,
      "is_flag": false,
      "section": "modelconfig",
      "required": false
    },
    "--hf-config-path": {
      "long_name": "--hf-config-path",
      "short_name": null,
      "description": "HF_CONFIG_PATH Name or path of the Hugging Face config to use. If unspecified, model name or path will be used.",
      "default_value": null,
      "arg_type": "json",
      "choices": null,
      "is_flag": false,
      "section": "modelconfig",
      "required": false
    },
    "--hf-overrides": {
      "long_name": "--hf-overrides",
      "short_name": null,
      "description": "HF_OVERRIDES If a dictionary, contains arguments to be forwarded to the Hugging Face config. If a callable, it is called to update the HuggingFace config.",
      "default_value": {},
      "arg_type": "list",
      "choices": null,
      "is_flag": false,
      "section": "modelconfig",
      "required": false
    },
    "--hf-token": {
      "long_name": "--hf-token",
      "short_name": null,
      "description": "[HF_TOKEN] The token to use as HTTP bearer authorization for remote files . If `True`, will use the token generated when running `huggingface-cli login` (stored in `~/.huggingface`).",
      "default_value": null,
      "arg_type": "list",
      "choices": null,
      "is_flag": false,
      "section": "modelconfig",
      "required": false
    },
    "--logits-processor-pattern": {
      "long_name": "--logits-processor-pattern",
      "short_name": null,
      "description": "LOGITS_PROCESSOR_PATTERN Optional regex pattern specifying valid logits processor qualified names that can be passed with the `logits_processors` extra completion argument. Defaults to `None`, which allows no processors.",
      "default_value": null,
      "arg_type": "string",
      "choices": null,
      "is_flag": false,
      "section": "modelconfig",
      "required": false
    },
    "--logits-processors": {
      "long_name": "--logits-processors",
      "short_name": null,
      "description": "LOGITS_PROCESSORS [LOGITS_PROCESSORS ...] One or more logits processors' fully-qualified class names or class definitions",
      "default_value": null,
      "arg_type": "list",
      "choices": null,
      "is_flag": false,
      "section": "modelconfig",
      "required": false
    },
    "--logprobs-mode": {
      "long_name": "--logprobs-mode",
      "short_name": null,
      "description": "{processed_logits,processed_logprobs,raw_logits,raw_logprobs} Indicates the content returned in the logprobs and prompt_logprobs. Supported mode: 1) raw_logprobs, 2) processed_logprobs, 3) raw_logits, 4) processed_logits. Raw means the values before applying logit processors, like bad words. Processed means the values after applying such processors.",
      "default_value": "raw_logprobs",
      "arg_type": "choice",
      "choices": [
        "processed_logits",
        "processed_logprobs",
        "raw_logits",
        "raw_logprobs"
      ],
      "is_flag": false,
      "section": "modelconfig",
      "required": false
    },
    "--max-logprobs": {
      "long_name": "--max-logprobs",
      "short_name": null,
      "description": "MAX_LOGPROBS Maximum number of log probabilities to return when `logprobs` is specified in `SamplingParams`. The default value comes the default for the OpenAI Chat Completions API. -1 means no cap, i.e. all (output_length * vocab_size) logprobs are allowed to be returned and it may cause OOM.",
      "default_value": 20,
      "arg_type": "list",
      "choices": null,
      "is_flag": false,
      "section": "modelconfig",
      "required": false
    },
    "--max-model-len": {
      "long_name": "--max-model-len",
      "short_name": null,
      "description": "MAX_MODEL_LEN Model context length (prompt and output). If unspecified, will be automatically derived from the model config. When passing via `--max-model-len`, supports k/m/g/K/M/G in human-readable format. Examples: - 1k -> 1000 - 1K -> 1024 - 25.6k -> 25,600",
      "default_value": null,
      "arg_type": "string",
      "choices": null,
      "is_flag": false,
      "section": "modelconfig",
      "required": false
    },
    "--max-seq-len-to-capture": {
      "long_name": "--max-seq-len-to-capture",
      "short_name": null,
      "description": "MAX_SEQ_LEN_TO_CAPTURE Maximum sequence len covered by CUDA graphs. When a sequence has context length larger than this, we fall back to eager mode. Additionally for encoder-decoder models, if the sequence length of the encoder input is larger than this, we fall back to the eager mode.",
      "default_value": 8192,
      "arg_type": "integer",
      "choices": null,
      "is_flag": false,
      "section": "modelconfig",
      "required": false
    },
    "--model-impl": {
      "long_name": "--model-impl",
      "short_name": null,
      "description": "{auto,vllm,transformers} Which implementation of the model to use: - \"auto\" will try to use the vLLM implementation, if it exists, and fall back to the Transformers implementation if no vLLM implementation is available. - \"vllm\" will use the vLLM model implementation. - \"transformers\" will use the Transformers model implementation.",
      "default_value": "auto",
      "arg_type": "choice",
      "choices": [
        "auto",
        "vllm",
        "transformers"
      ],
      "is_flag": false,
      "section": "modelconfig",
      "required": false
    },
    "--override-attention-dtype": {
      "long_name": "--override-attention-dtype",
      "short_name": null,
      "description": "OVERRIDE_ATTENTION_DTYPE Override dtype for attention",
      "default_value": null,
      "arg_type": "string",
      "choices": null,
      "is_flag": false,
      "section": "modelconfig",
      "required": false
    },
    "--override-generation-config": {
      "long_name": "--override-generation-config",
      "short_name": null,
      "description": "OVERRIDE_GENERATION_CONFIG Overrides or sets generation config. e.g. `{\"temperature\": 0.5}`. If used with `--generation- config auto`, the override parameters will be merged with the default config from the model. If used with `--generation-config vllm`, only the override parameters are used. Should either be a valid JSON string or JSON keys passed individually.",
      "default_value": {},
      "arg_type": "choice",
      "choices": [
        "\"temperature\": 0.5"
      ],
      "is_flag": false,
      "section": "modelconfig",
      "required": false
    },
    "--override-neuron-config": {
      "long_name": "--override-neuron-config",
      "short_name": null,
      "description": "OVERRIDE_NEURON_CONFIG Initialize non-default neuron config or override default neuron config that are specific to Neuron devices, this argument will be used to configure the neuron config that can not be gathered from the vllm arguments. e.g. `{\"cast_logits_dtype\": \"bfloat16\"}`. Should either be a valid JSON string or JSON keys passed individually.",
      "default_value": {},
      "arg_type": "choice",
      "choices": [
        "\"cast_logits_dtype\": \"bfloat16\""
      ],
      "is_flag": false,
      "section": "modelconfig",
      "required": false
    },
    "--override-pooler-config": {
      "long_name": "--override-pooler-config",
      "short_name": null,
      "description": "OVERRIDE_POOLER_CONFIG Initialize non-default pooling config or override default pooling config for the pooling model. e.g. `{\"pooling_type\": \"mean\", \"normalize\": false}`.",
      "default_value": null,
      "arg_type": "choice",
      "choices": [
        "\"pooling_type\": \"mean\"",
        "\"normalize\": false"
      ],
      "is_flag": false,
      "section": "modelconfig",
      "required": false
    },
    "--quantization": {
      "long_name": "--quantization",
      "short_name": null,
      "description": "QUANTIZATION, -q QUANTIZATION Method used to quantize the weights. If `None`, we first check the `quantization_config` attribute in the model config file. If that is `None`, we assume the model weights are not quantized and use `dtype` to determine the data type of the weights.",
      "default_value": null,
      "arg_type": "string",
      "choices": null,
      "is_flag": false,
      "section": "modelconfig",
      "required": false
    },
    "--revision": {
      "long_name": "--revision",
      "short_name": null,
      "description": "REVISION   The specific model version to use. It can be a branch name, a tag name, or a commit id. If unspecified, will use the default version.",
      "default_value": null,
      "arg_type": "string",
      "choices": null,
      "is_flag": false,
      "section": "modelconfig",
      "required": false
    },
    "--rope-scaling": {
      "long_name": "--rope-scaling",
      "short_name": null,
      "description": "ROPE_SCALING RoPE scaling configuration. For example, `{\"rope_type\":\"dynamic\",\"factor\":2.0}`. Should either be a valid JSON string or JSON keys passed individually.",
      "default_value": {},
      "arg_type": "choice",
      "choices": [
        "\"rope_type\":\"dynamic\"",
        "\"factor\":2.0"
      ],
      "is_flag": false,
      "section": "modelconfig",
      "required": false
    },
    "--rope-theta": {
      "long_name": "--rope-theta",
      "short_name": null,
      "description": "ROPE_THETA RoPE theta. Use with `rope_scaling`. In some cases, changing the RoPE theta improves the performance of the scaled model.",
      "default_value": null,
      "arg_type": "string",
      "choices": null,
      "is_flag": false,
      "section": "modelconfig",
      "required": false
    },
    "--runner": {
      "long_name": "--runner",
      "short_name": null,
      "description": "{auto,draft,generate,pooling} The type of model runner to use. Each vLLM instance only supports one model runner, even if the same model can be used for multiple types.",
      "default_value": "auto",
      "arg_type": "choice",
      "choices": [
        "auto",
        "draft",
        "generate",
        "pooling"
      ],
      "is_flag": false,
      "section": "modelconfig",
      "required": false
    },
    "--seed": {
      "long_name": "--seed",
      "short_name": null,
      "description": "SEED           Random seed for reproducibility. Initialized to None in V0, but initialized to 0 in V1.",
      "default_value": null,
      "arg_type": "string",
      "choices": null,
      "is_flag": false,
      "section": "modelconfig",
      "required": false
    },
    "--served-model-name": {
      "long_name": "--served-model-name",
      "short_name": null,
      "description": "SERVED_MODEL_NAME [SERVED_MODEL_NAME ...] The model name(s) used in the API. If multiple names are provided, the server will respond to any of the provided names. The model name in the model field of a response will be the first name in this list. If not specified, the model name will be the same as the `--model` argument. Noted that this name(s) will also be used in `model_name` tag content of prometheus metrics, if multiple names provided, metrics tag will take the first one.",
      "default_value": null,
      "arg_type": "list",
      "choices": null,
      "is_flag": false,
      "section": "modelconfig",
      "required": false
    },
    "--skip-tokenizer-init": {
      "long_name": "--skip-tokenizer-init",
      "short_name": null,
      "description": "--no-skip-tokenizer-init Skip initialization of tokenizer and detokenizer. Expects valid `prompt_token_ids` and `None` for prompt from the input. The generated output will contain token ids.",
      "default_value": false,
      "arg_type": "boolean",
      "choices": null,
      "is_flag": true,
      "section": "modelconfig",
      "required": false
    },
    "--task": {
      "long_name": "--task",
      "short_name": null,
      "description": "{auto,classify,draft,embed,embedding,generate,reward,score,transcription,None} [DEPRECATED] The task to use the model for. If the model supports more than one model runner, this is used to select which model runner to run. Note that the model may support other tasks using the same model runner.",
      "default_value": null,
      "arg_type": "choice",
      "choices": [
        "auto",
        "classify",
        "draft",
        "embed",
        "embedding",
        "generate",
        "reward",
        "score",
        "transcription",
        "None"
      ],
      "is_flag": false,
      "section": "modelconfig",
      "required": false
    },
    "--tokenizer": {
      "long_name": "--tokenizer",
      "short_name": null,
      "description": "TOKENIZER Name or path of the Hugging Face tokenizer to use. If unspecified, model name or path will be used.",
      "default_value": null,
      "arg_type": "string",
      "choices": null,
      "is_flag": false,
      "section": "modelconfig",
      "required": false
    },
    "--tokenizer-mode": {
      "long_name": "--tokenizer-mode",
      "short_name": null,
      "description": "{auto,custom,mistral,slow} Tokenizer mode: - \"auto\" will use the fast tokenizer if available. - \"slow\" will always use the slow tokenizer. - \"mistral\" will always use the tokenizer from `mistral_common`. - \"custom\" will use --tokenizer to select the preregistered tokenizer.",
      "default_value": "auto",
      "arg_type": "choice",
      "choices": [
        "auto",
        "custom",
        "mistral",
        "slow"
      ],
      "is_flag": false,
      "section": "modelconfig",
      "required": false
    },
    "--tokenizer-revision": {
      "long_name": "--tokenizer-revision",
      "short_name": null,
      "description": "TOKENIZER_REVISION The specific revision to use for the tokenizer on the Hugging Face Hub. It can be a branch name, a tag name, or a commit id. If unspecified, will use the default version.",
      "default_value": null,
      "arg_type": "string",
      "choices": null,
      "is_flag": false,
      "section": "modelconfig",
      "required": false
    },
    "--trust-remote-code": {
      "long_name": "--trust-remote-code",
      "short_name": null,
      "description": "--no-trust-remote-code Trust remote code (e.g., from HuggingFace) when downloading the model and tokenizer.",
      "default_value": false,
      "arg_type": "boolean",
      "choices": null,
      "is_flag": true,
      "section": "modelconfig",
      "required": false
    },
    "--download-dir": {
      "long_name": "--download-dir",
      "short_name": null,
      "description": "DOWNLOAD_DIR Directory to download and load the weights, default to the default cache directory of Hugging Face.",
      "default_value": null,
      "arg_type": "string",
      "choices": null,
      "is_flag": false,
      "section": "loadconfig",
      "required": false
    },
    "--ignore-patterns": {
      "long_name": "--ignore-patterns",
      "short_name": null,
      "description": "IGNORE_PATTERNS [IGNORE_PATTERNS ...] The list of patterns to ignore when loading the model. Default to \"original/**/*\" to avoid repeated loading of llama's checkpoints.",
      "default_value": null,
      "arg_type": "list",
      "choices": null,
      "is_flag": false,
      "section": "loadconfig",
      "required": false
    },
    "--load-format": {
      "long_name": "--load-format",
      "short_name": null,
      "description": "LOAD_FORMAT The format of the model weights to load: - \"auto\" will try to load the weights in the safetensors format and fall back to the pytorch bin format if safetensors format is not available. - \"pt\" will load the weights in the pytorch bin format. - \"safetensors\" will load the weights in the safetensors format. - \"npcache\" will load the weights in pytorch format and store a numpy cache to speed up the loading. - \"dummy\" will initialize the weights with random values, which is mainly for profiling. - \"tensorizer\" will use CoreWeave's tensorizer library for fast weight loading. See the Tensorize vLLM Model script in the Examples section for more information. - \"runai_streamer\" will load the Safetensors weights using Run:ai Model Streamer. - \"bitsandbytes\" will load the weights using bitsandbytes quantization. - \"sharded_state\" will load weights from pre-sharded checkpoint files, supporting efficient loading of tensor-parallel models. - \"gguf\" will load weights from GGUF format files (details specified in https://github.com/ggml- org/ggml/blob/master/docs/gguf.md). - \"mistral\" will load weights from consolidated safetensors files used by Mistral models. - Other custom values can be supported via plugins.",
      "default_value": "auto",
      "arg_type": "string",
      "choices": null,
      "is_flag": false,
      "section": "loadconfig",
      "required": false
    },
    "--model-loader-extra-config": {
      "long_name": "--model-loader-extra-config",
      "short_name": null,
      "description": "MODEL_LOADER_EXTRA_CONFIG Extra config for model loader. This will be passed to the model loader corresponding to the chosen load_format.",
      "default_value": {},
      "arg_type": "json",
      "choices": null,
      "is_flag": false,
      "section": "loadconfig",
      "required": false
    },
    "--pt-load-map-location": {
      "long_name": "--pt-load-map-location",
      "short_name": null,
      "description": "PT_LOAD_MAP_LOCATION pt_load_map_location: the map location for loading pytorch checkpoint, to support loading checkpoints can only be loaded on certain devices like \"cuda\", this is equivalent to {\"\": \"cuda\"}. Another supported format is mapping from different devices like from GPU 1 to GPU 0: {\"cuda:1\": \"cuda:0\"}. Note that when passed from command line, the strings in dictionary needs to be double quoted for json parsing. For more details, see original doc for `map_location` in https://pytorch .org/docs/stable/generated/torch.load.html",
      "default_value": "cpu",
      "arg_type": "choice",
      "choices": [
        "\"\": \"cuda\""
      ],
      "is_flag": false,
      "section": "loadconfig",
      "required": false
    },
    "--use-tqdm-on-load": {
      "long_name": "--use-tqdm-on-load",
      "short_name": null,
      "description": "--no-use-tqdm-on-load Whether to enable tqdm for showing progress bar when loading model weights.",
      "default_value": true,
      "arg_type": "boolean",
      "choices": null,
      "is_flag": true,
      "section": "loadconfig",
      "required": false
    },
    "--guided-decoding-backend": {
      "long_name": "--guided-decoding-backend",
      "short_name": null,
      "description": "{auto,guidance,outlines,xgrammar} Which engine will be used for guided decoding (JSON schema / regex etc) by default. With \"auto\", we will make opinionated choices based on request contents and what the backend libraries currently support, so the behavior is subject to change in each release.",
      "default_value": "auto",
      "arg_type": "choice",
      "choices": [
        "auto",
        "guidance",
        "outlines",
        "xgrammar"
      ],
      "is_flag": false,
      "section": "decodingconfig",
      "required": false
    },
    "--guided-decoding-disable-additional-properties": {
      "long_name": "--guided-decoding-disable-additional-properties",
      "short_name": null,
      "description": "--no-guided-decoding-disable-additional-properties If `True`, the `guidance` backend will not use `additionalProperties` in the JSON schema. This is only supported for the `guidance` backend and is used to better align its behaviour with `outlines` and `xgrammar`.",
      "default_value": false,
      "arg_type": "boolean",
      "choices": null,
      "is_flag": true,
      "section": "decodingconfig",
      "required": false
    },
    "--guided-decoding-disable-any-whitespace": {
      "long_name": "--guided-decoding-disable-any-whitespace",
      "short_name": null,
      "description": "--no-guided-decoding-disable-any-whitespace If `True`, the model will not generate any whitespace during guided decoding. This is only supported for xgrammar and guidance backends.",
      "default_value": false,
      "arg_type": "boolean",
      "choices": null,
      "is_flag": true,
      "section": "decodingconfig",
      "required": false
    },
    "--guided-decoding-disable-fallback": {
      "long_name": "--guided-decoding-disable-fallback",
      "short_name": null,
      "description": "--no-guided-decoding-disable-fallback If `True`, vLLM will not fallback to a different backend on error.",
      "default_value": false,
      "arg_type": "boolean",
      "choices": null,
      "is_flag": true,
      "section": "decodingconfig",
      "required": false
    },
    "--reasoning-parser": {
      "long_name": "--reasoning-parser",
      "short_name": null,
      "description": "{deepseek_r1,glm45,GptOss,granite,hunyuan_a13b,mistral,qwen3,step3} Select the reasoning parser depending on the model that you're using. This is used to parse the reasoning content into OpenAI API format.",
      "default_value": "",
      "arg_type": "choice",
      "choices": [
        "deepseek_r1",
        "glm45",
        "GptOss",
        "granite",
        "hunyuan_a13b",
        "mistral",
        "qwen3",
        "step3"
      ],
      "is_flag": false,
      "section": "decodingconfig",
      "required": false
    },
    "--data-parallel-address": {
      "long_name": "--data-parallel-address",
      "short_name": null,
      "description": "DATA_PARALLEL_ADDRESS, -dpa DATA_PARALLEL_ADDRESS Address of data parallel cluster head-node.",
      "default_value": null,
      "arg_type": "list",
      "choices": null,
      "is_flag": false,
      "section": "parallelconfig",
      "required": false
    },
    "--data-parallel-backend": {
      "long_name": "--data-parallel-backend",
      "short_name": null,
      "description": "DATA_PARALLEL_BACKEND, -dpb DATA_PARALLEL_BACKEND Backend for data parallel, either \"mp\" or \"ray\".",
      "default_value": "mp",
      "arg_type": "string",
      "choices": null,
      "is_flag": false,
      "section": "parallelconfig",
      "required": false
    },
    "--data-parallel-hybrid-lb": {
      "long_name": "--data-parallel-hybrid-lb",
      "short_name": null,
      "description": "--no-data-parallel-hybrid-lb Whether to use \"hybrid\" DP LB mode. Applies only to online serving and when data_parallel_size > 0. Enables running an AsyncLLM and API server on a \"per- node\" basis where vLLM load balances between local data parallel ranks, but an external LB balances between vLLM nodes/replicas. Set explicitly in conjunction with --data-parallel-start-rank.",
      "default_value": false,
      "arg_type": "boolean",
      "choices": null,
      "is_flag": true,
      "section": "parallelconfig",
      "required": false
    },
    "--data-parallel-rank": {
      "long_name": "--data-parallel-rank",
      "short_name": null,
      "description": "DATA_PARALLEL_RANK, -dpn DATA_PARALLEL_RANK Data parallel rank of this instance. When set, enables external load balancer mode.",
      "default_value": null,
      "arg_type": "boolean",
      "choices": null,
      "is_flag": false,
      "section": "parallelconfig",
      "required": false
    },
    "--data-parallel-rpc-port": {
      "long_name": "--data-parallel-rpc-port",
      "short_name": null,
      "description": "DATA_PARALLEL_RPC_PORT, -dpp DATA_PARALLEL_RPC_PORT Port for data parallel RPC communication.",
      "default_value": null,
      "arg_type": "string",
      "choices": null,
      "is_flag": false,
      "section": "parallelconfig",
      "required": false
    },
    "--data-parallel-size": {
      "long_name": "--data-parallel-size",
      "short_name": null,
      "description": "DATA_PARALLEL_SIZE, -dp DATA_PARALLEL_SIZE Number of data parallel groups. MoE layers will be sharded according to the product of the tensor parallel size and data parallel size.",
      "default_value": 1,
      "arg_type": "integer",
      "choices": null,
      "is_flag": false,
      "section": "parallelconfig",
      "required": false
    },
    "--data-parallel-size-local": {
      "long_name": "--data-parallel-size-local",
      "short_name": null,
      "description": "DATA_PARALLEL_SIZE_LOCAL, -dpl DATA_PARALLEL_SIZE_LOCAL Number of data parallel replicas to run on this node.",
      "default_value": null,
      "arg_type": "integer",
      "choices": null,
      "is_flag": false,
      "section": "parallelconfig",
      "required": false
    },
    "--data-parallel-start-rank": {
      "long_name": "--data-parallel-start-rank",
      "short_name": null,
      "description": "DATA_PARALLEL_START_RANK, -dpr DATA_PARALLEL_START_RANK Starting data parallel rank for secondary nodes.",
      "default_value": null,
      "arg_type": "string",
      "choices": null,
      "is_flag": false,
      "section": "parallelconfig",
      "required": false
    },
    "--disable-custom-all-reduce": {
      "long_name": "--disable-custom-all-reduce",
      "short_name": null,
      "description": "--no-disable-custom-all-reduce Disable the custom all-reduce kernel and fall back to NCCL.",
      "default_value": false,
      "arg_type": "boolean",
      "choices": null,
      "is_flag": true,
      "section": "parallelconfig",
      "required": false
    },
    "--distributed-executor-backend": {
      "long_name": "--distributed-executor-backend",
      "short_name": null,
      "description": "{external_launcher,mp,ray,uni,None} Backend to use for distributed model workers, either \"ray\" or \"mp\" (multiprocessing). If the product of pipeline_parallel_size and tensor_parallel_size is less than or equal to the number of GPUs available, \"mp\" will be used to keep processing on a single host. Otherwise, this will default to \"ray\" if Ray is installed and fail otherwise. Note that tpu only support Ray for distributed inference.",
      "default_value": null,
      "arg_type": "choice",
      "choices": [
        "external_launcher",
        "mp",
        "ray",
        "uni",
        "None"
      ],
      "is_flag": false,
      "section": "parallelconfig",
      "required": false
    },
    "--enable-eplb": {
      "long_name": "--enable-eplb",
      "short_name": null,
      "description": "--no-enable-eplb Enable expert parallelism load balancing for MoE layers.",
      "default_value": false,
      "arg_type": "boolean",
      "choices": null,
      "is_flag": true,
      "section": "parallelconfig",
      "required": false
    },
    "--enable-expert-parallel": {
      "long_name": "--enable-expert-parallel",
      "short_name": null,
      "description": "--no-enable-expert-parallel Use expert parallelism instead of tensor parallelism for MoE layers.",
      "default_value": false,
      "arg_type": "boolean",
      "choices": null,
      "is_flag": true,
      "section": "parallelconfig",
      "required": false
    },
    "--enable-multimodal-encoder-data-parallel": {
      "long_name": "--enable-multimodal-encoder-data-parallel",
      "short_name": null,
      "description": "--no-enable-multimodal-encoder-data-parallel Use data parallelism instead of tensor parallelism for vision encoder. Only support LLama4 for now",
      "default_value": false,
      "arg_type": "boolean",
      "choices": null,
      "is_flag": true,
      "section": "parallelconfig",
      "required": false
    },
    "--eplb-log-balancedness": {
      "long_name": "--eplb-log-balancedness",
      "short_name": null,
      "description": "--no-eplb-log-balancedness Log the balancedness each step of expert parallelism. This is turned off by default since it will cause communication overhead.",
      "default_value": false,
      "arg_type": "boolean",
      "choices": null,
      "is_flag": true,
      "section": "parallelconfig",
      "required": false
    },
    "--eplb-step-interval": {
      "long_name": "--eplb-step-interval",
      "short_name": null,
      "description": "EPLB_STEP_INTERVAL Interval for rearranging experts in expert parallelism. Note that if this is greater than the EPLB window size, only the metrics of the last `eplb_window_size` steps will be used for rearranging experts.",
      "default_value": 3000,
      "arg_type": "integer",
      "choices": null,
      "is_flag": false,
      "section": "parallelconfig",
      "required": false
    },
    "--eplb-window-size": {
      "long_name": "--eplb-window-size",
      "short_name": null,
      "description": "EPLB_WINDOW_SIZE Window size for expert load recording.",
      "default_value": 1000,
      "arg_type": "integer",
      "choices": null,
      "is_flag": false,
      "section": "parallelconfig",
      "required": false
    },
    "--max-parallel-loading-workers": {
      "long_name": "--max-parallel-loading-workers",
      "short_name": null,
      "description": "MAX_PARALLEL_LOADING_WORKERS Maximum number of parallel loading workers when loading model sequentially in multiple batches. To avoid RAM OOM when using tensor parallel and large models.",
      "default_value": null,
      "arg_type": "list",
      "choices": null,
      "is_flag": false,
      "section": "parallelconfig",
      "required": false
    },
    "--num-redundant-experts": {
      "long_name": "--num-redundant-experts",
      "short_name": null,
      "description": "NUM_REDUNDANT_EXPERTS Number of redundant experts to use for expert parallelism.",
      "default_value": 0,
      "arg_type": "list",
      "choices": null,
      "is_flag": false,
      "section": "parallelconfig",
      "required": false
    },
    "--pipeline-parallel-size": {
      "long_name": "--pipeline-parallel-size",
      "short_name": null,
      "description": "PIPELINE_PARALLEL_SIZE, -pp PIPELINE_PARALLEL_SIZE Number of pipeline parallel groups.",
      "default_value": 1,
      "arg_type": "integer",
      "choices": null,
      "is_flag": false,
      "section": "parallelconfig",
      "required": false
    },
    "--ray-workers-use-nsight": {
      "long_name": "--ray-workers-use-nsight",
      "short_name": null,
      "description": "--no-ray-workers-use-nsight Whether to profile Ray workers with nsight, see https://docs.ray.io/en/latest/ray-observability/user- guides/profiling.html#profiling-nsight-profiler.",
      "default_value": false,
      "arg_type": "boolean",
      "choices": null,
      "is_flag": true,
      "section": "parallelconfig",
      "required": false
    },
    "--tensor-parallel-size": {
      "long_name": "--tensor-parallel-size",
      "short_name": null,
      "description": "TENSOR_PARALLEL_SIZE, -tp TENSOR_PARALLEL_SIZE Number of tensor parallel groups.",
      "default_value": 1,
      "arg_type": "integer",
      "choices": null,
      "is_flag": false,
      "section": "parallelconfig",
      "required": false
    },
    "--worker-cls": {
      "long_name": "--worker-cls",
      "short_name": null,
      "description": "WORKER_CLS The full name of the worker class to use. If \"auto\", the worker class will be determined based on the platform.",
      "default_value": "auto",
      "arg_type": "list",
      "choices": null,
      "is_flag": false,
      "section": "parallelconfig",
      "required": false
    },
    "--worker-extension-cls": {
      "long_name": "--worker-extension-cls",
      "short_name": null,
      "description": "WORKER_EXTENSION_CLS The full name of the worker extension class to use. The worker extension class is dynamically inherited by the worker class. This is used to inject new attributes and methods to the worker class for use in collective_rpc calls.",
      "default_value": "",
      "arg_type": "list",
      "choices": null,
      "is_flag": false,
      "section": "parallelconfig",
      "required": false
    },
    "--block-size": {
      "long_name": "--block-size",
      "short_name": null,
      "description": "{1,8,16,32,64,128} Size of a contiguous cache block in number of tokens. This is ignored on neuron devices and set to `--max- model-len`. On CUDA devices, only block sizes up to 32 are supported. On HPU devices, block size defaults to 128. This config has no static default. If left unspecified by the user, it will be set in `Platform.check_and_update_config()` based on the current platform.",
      "default_value": null,
      "arg_type": "choice",
      "choices": [
        "1",
        "8",
        "16",
        "32",
        "64",
        "128"
      ],
      "is_flag": false,
      "section": "cacheconfig",
      "required": false
    },
    "--calculate-kv-scales": {
      "long_name": "--calculate-kv-scales",
      "short_name": null,
      "description": "--no-calculate-kv-scales This enables dynamic calculation of `k_scale` and `v_scale` when kv_cache_dtype is fp8. If `False`, the scales will be loaded from the model checkpoint if available. Otherwise, the scales will default to 1.0.",
      "default_value": false,
      "arg_type": "boolean",
      "choices": null,
      "is_flag": true,
      "section": "cacheconfig",
      "required": false
    },
    "--cpu-offload-gb": {
      "long_name": "--cpu-offload-gb",
      "short_name": null,
      "description": "CPU_OFFLOAD_GB The space in GiB to offload to CPU, per GPU. Default is 0, which means no offloading. Intuitively, this argument can be seen as a virtual way to increase the GPU memory size. For example, if you have one 24 GB GPU and set this to 10, virtually you can think of it as a 34 GB GPU. Then you can load a 13B model with BF16 weight, which requires at least 26GB GPU memory. Note that this requires fast CPU-GPU interconnect, as part of the model is loaded from CPU memory to GPU memory on the fly in each model forward pass.",
      "default_value": 0,
      "arg_type": "integer",
      "choices": null,
      "is_flag": false,
      "section": "cacheconfig",
      "required": false
    },
    "--enable-prefix-caching": {
      "long_name": "--enable-prefix-caching",
      "short_name": null,
      "description": "--no-enable-prefix-caching Whether to enable prefix caching. Disabled by default for V0. Enabled by default for V1.",
      "default_value": null,
      "arg_type": "boolean",
      "choices": null,
      "is_flag": false,
      "section": "cacheconfig",
      "required": false
    },
    "--gpu-memory-utilization": {
      "long_name": "--gpu-memory-utilization",
      "short_name": null,
      "description": "GPU_MEMORY_UTILIZATION The fraction of GPU memory to be used for the model executor, which can range from 0 to 1. For example, a value of 0.5 would imply 50% GPU memory utilization. If unspecified, will use the default value of 0.9. This is a per-instance limit, and only applies to the current vLLM instance. It does not matter if you have another vLLM instance running on the same GPU. For example, if you have two vLLM instances running on the same GPU, you can set the GPU memory utilization to 0.5 for each instance.",
      "default_value": 0.9,
      "arg_type": "float",
      "choices": null,
      "is_flag": false,
      "section": "cacheconfig",
      "required": false
    },
    "--kv-cache-dtype": {
      "long_name": "--kv-cache-dtype",
      "short_name": null,
      "description": "{auto,fp8,fp8_e4m3,fp8_e5m2,fp8_inc} Data type for kv cache storage. If \"auto\", will use model data type. CUDA 11.8+ supports fp8 (=fp8_e4m3) and fp8_e5m2. ROCm (AMD GPU) supports fp8 (=fp8_e4m3). Intel Gaudi (HPU) supports fp8 (using fp8_inc).",
      "default_value": "auto",
      "arg_type": "choice",
      "choices": [
        "auto",
        "fp8",
        "fp8_e4m3",
        "fp8_e5m2",
        "fp8_inc"
      ],
      "is_flag": false,
      "section": "cacheconfig",
      "required": false
    },
    "--kv-sharing-fast-prefill": {
      "long_name": "--kv-sharing-fast-prefill",
      "short_name": null,
      "description": "--no-kv-sharing-fast-prefill This feature is work in progress and no prefill optimization takes place with this flag enabled currently. In some KV sharing setups, e.g. YOCO (https://arxiv.org/abs/2405.05254), some layers can skip tokens corresponding to prefill. This flag enables attention metadata for eligible layers to be overriden with metadata necessary for implementating this optimization in some models (e.g. Gemma3n)",
      "default_value": false,
      "arg_type": "boolean",
      "choices": null,
      "is_flag": true,
      "section": "cacheconfig",
      "required": false
    },
    "--mamba-cache-dtype": {
      "long_name": "--mamba-cache-dtype",
      "short_name": null,
      "description": "{auto,float32} The data type to use for the Mamba cache (both the conv as well as the ssm state). If set to 'auto', the data type will be inferred from the model config.",
      "default_value": "auto",
      "arg_type": "choice",
      "choices": [
        "auto",
        "float32"
      ],
      "is_flag": false,
      "section": "cacheconfig",
      "required": false
    },
    "--mamba-ssm-cache-dtype": {
      "long_name": "--mamba-ssm-cache-dtype",
      "short_name": null,
      "description": "{auto,float32} The data type to use for the Mamba cache (ssm state only, conv state will still be controlled by mamba_cache_dtype). If set to 'auto', the data type for the ssm state will be determined by mamba_cache_dtype.",
      "default_value": "auto",
      "arg_type": "choice",
      "choices": [
        "auto",
        "float32"
      ],
      "is_flag": false,
      "section": "cacheconfig",
      "required": false
    },
    "--num-gpu-blocks-override": {
      "long_name": "--num-gpu-blocks-override",
      "short_name": null,
      "description": "NUM_GPU_BLOCKS_OVERRIDE Number of GPU blocks to use. This overrides the profiled `num_gpu_blocks` if specified. Does nothing if `None`. Used for testing preemption.",
      "default_value": null,
      "arg_type": "integer",
      "choices": null,
      "is_flag": false,
      "section": "cacheconfig",
      "required": false
    },
    "--prefix-caching-hash-algo": {
      "long_name": "--prefix-caching-hash-algo",
      "short_name": null,
      "description": "{builtin,sha256,sha256_cbor_64bit} Set the hash algorithm for prefix caching: - \"builtin\" is Python's built-in hash. - \"sha256\" is collision resistant but with certain overheads. This option uses Pickle for object serialization before hashing. - \"sha256_cbor_64bit\" provides a reproducible, cross- language compatible hash. It serializes objects using canonical CBOR and hashes them with SHA-256. The resulting hash consists of the lower 64 bits of the SHA-256 digest.",
      "default_value": "builtin",
      "arg_type": "choice",
      "choices": [
        "builtin",
        "sha256",
        "sha256_cbor_64bit"
      ],
      "is_flag": false,
      "section": "cacheconfig",
      "required": false
    },
    "--swap-space": {
      "long_name": "--swap-space",
      "short_name": null,
      "description": "SWAP_SPACE Size of the CPU swap space per GPU (in GiB).",
      "default_value": 4,
      "arg_type": "integer",
      "choices": null,
      "is_flag": false,
      "section": "cacheconfig",
      "required": false
    },
    "--interleave-mm-strings": {
      "long_name": "--interleave-mm-strings",
      "short_name": null,
      "description": "--no-interleave-mm-strings Enable fully interleaved support for multimodal prompts.",
      "default_value": false,
      "arg_type": "boolean",
      "choices": null,
      "is_flag": true,
      "section": "multimodalconfig",
      "required": false
    },
    "--limit-mm-per-prompt": {
      "long_name": "--limit-mm-per-prompt",
      "short_name": null,
      "description": "LIMIT_MM_PER_PROMPT The maximum number of input items allowed per prompt for each modality. Defaults to 1 (V0) or 999 (V1) for each modality. For example, to allow up to 16 images and 2 videos per prompt: `{\"image\": 16, \"video\": 2}` Should either be a valid JSON string or JSON keys passed individually.",
      "default_value": {},
      "arg_type": "choice",
      "choices": [
        "\"image\": 16",
        "\"video\": 2"
      ],
      "is_flag": false,
      "section": "multimodalconfig",
      "required": false
    },
    "--media-io-kwargs": {
      "long_name": "--media-io-kwargs",
      "short_name": null,
      "description": "MEDIA_IO_KWARGS Additional args passed to process media inputs, keyed by modalities. For example, to set num_frames for video, set `--media-io-kwargs '{\"video\": {\"num_frames\": 40} }'` Should either be a valid JSON string or JSON keys passed individually.",
      "default_value": {},
      "arg_type": "choice",
      "choices": [
        "\"video\": {\"num_frames\": 40"
      ],
      "is_flag": false,
      "section": "multimodalconfig",
      "required": false
    },
    "--mm-processor-cache-gb": {
      "long_name": "--mm-processor-cache-gb",
      "short_name": null,
      "description": "MM_PROCESSOR_CACHE_GB The size (in GiB) of the multi-modal processor cache, which is used to This cache is duplicated for each API process and engine core process, resulting in a total memory usage of `mm_processor_cache_gb * (api_server_count + data_parallel_size)`. Set to `0` to disable this cache completely (not recommended).",
      "default_value": 4,
      "arg_type": "integer",
      "choices": null,
      "is_flag": false,
      "section": "multimodalconfig",
      "required": false
    },
    "--mm-processor-kwargs": {
      "long_name": "--mm-processor-kwargs",
      "short_name": null,
      "description": "MM_PROCESSOR_KWARGS Overrides for the multi-modal processor obtained from `transformers.AutoProcessor.from_pretrained`. The available overrides depend on the model that is being run. For example, for Phi-3-Vision: `{\"num_crops\": 4}`. Should either be a valid JSON string or JSON keys passed individually.",
      "default_value": null,
      "arg_type": "choice",
      "choices": [
        "\"num_crops\": 4"
      ],
      "is_flag": false,
      "section": "multimodalconfig",
      "required": false
    },
    "--skip-mm-profiling": {
      "long_name": "--skip-mm-profiling",
      "short_name": null,
      "description": "--no-skip-mm-profiling When enabled, skips multimodal memory profiling and only profiles with  language backbone model during engine initialization. This reduces engine startup time but shifts the responsibility to users for estimating the peak memory usage of the activation of multimodal encoder and embedding cache.",
      "default_value": false,
      "arg_type": "boolean",
      "choices": null,
      "is_flag": true,
      "section": "multimodalconfig",
      "required": false
    },
    "--default-mm-loras": {
      "long_name": "--default-mm-loras",
      "short_name": null,
      "description": "DEFAULT_MM_LORAS Dictionary mapping specific modalities to LoRA model paths; this field is only applicable to multimodal models and should be leveraged when a model always expects a LoRA to be active when a given modality is present. Note that currently, if a request provides multiple additional modalities, each of which have their own LoRA, we do NOT apply default_mm_loras because we currently only support one lora adapter per prompt. When run in offline mode, the lora IDs for n modalities will be automatically assigned to 1-n with the names of the modalities in alphabetic order. Should either be a valid JSON string or JSON keys passed individually.",
      "default_value": null,
      "arg_type": "json",
      "choices": null,
      "is_flag": false,
      "section": "loraconfig",
      "required": false
    },
    "--enable-lora": {
      "long_name": "--enable-lora",
      "short_name": null,
      "description": "--no-enable-lora If True, enable handling of LoRA adapters.",
      "default_value": null,
      "arg_type": "boolean",
      "choices": null,
      "is_flag": false,
      "section": "loraconfig",
      "required": false
    },
    "--enable-lora-bias": {
      "long_name": "--enable-lora-bias",
      "short_name": null,
      "description": "--no-enable-lora-bias Enable bias for LoRA adapters.",
      "default_value": false,
      "arg_type": "boolean",
      "choices": null,
      "is_flag": true,
      "section": "loraconfig",
      "required": false
    },
    "--fully-sharded-loras": {
      "long_name": "--fully-sharded-loras",
      "short_name": null,
      "description": "--no-fully-sharded-loras By default, only half of the LoRA computation is sharded with tensor parallelism. Enabling this will use the fully sharded layers. At high sequence length, max rank or tensor parallel size, this is likely faster.",
      "default_value": false,
      "arg_type": "boolean",
      "choices": null,
      "is_flag": true,
      "section": "loraconfig",
      "required": false
    },
    "--lora-dtype": {
      "long_name": "--lora-dtype",
      "short_name": null,
      "description": "{auto,bfloat16,float16} Data type for LoRA. If auto, will default to base model dtype.",
      "default_value": "auto",
      "arg_type": "choice",
      "choices": [
        "auto",
        "bfloat16",
        "float16"
      ],
      "is_flag": false,
      "section": "loraconfig",
      "required": false
    },
    "--lora-extra-vocab-size": {
      "long_name": "--lora-extra-vocab-size",
      "short_name": null,
      "description": "LORA_EXTRA_VOCAB_SIZE Maximum size of extra vocabulary that can be present in a LoRA adapter (added to the base model vocabulary).",
      "default_value": 256,
      "arg_type": "integer",
      "choices": null,
      "is_flag": false,
      "section": "loraconfig",
      "required": false
    },
    "--max-cpu-loras": {
      "long_name": "--max-cpu-loras",
      "short_name": null,
      "description": "MAX_CPU_LORAS Maximum number of LoRAs to store in CPU memory. Must be >= than `max_loras`.",
      "default_value": null,
      "arg_type": "list",
      "choices": null,
      "is_flag": false,
      "section": "loraconfig",
      "required": false
    },
    "--max-lora-rank": {
      "long_name": "--max-lora-rank",
      "short_name": null,
      "description": "MAX_LORA_RANK Max LoRA rank.",
      "default_value": 16,
      "arg_type": "integer",
      "choices": null,
      "is_flag": false,
      "section": "loraconfig",
      "required": false
    },
    "--max-loras": {
      "long_name": "--max-loras",
      "short_name": null,
      "description": "MAX_LORAS Max number of LoRAs in a single batch.",
      "default_value": 1,
      "arg_type": "list",
      "choices": null,
      "is_flag": false,
      "section": "loraconfig",
      "required": false
    },
    "--collect-detailed-traces": {
      "long_name": "--collect-detailed-traces",
      "short_name": null,
      "description": "{all,model,worker,None} [{all,model,worker,None} ...] It makes sense to set this only if `--otlp-traces- endpoint` is set. If set, it will collect detailed traces for the specified modules. This involves use of possibly costly and or blocking operations and hence might have a performance impact. Note that collecting detailed timing information for each request can be expensive.",
      "default_value": null,
      "arg_type": "choice",
      "choices": [
        "all",
        "model",
        "worker",
        "None"
      ],
      "is_flag": false,
      "section": "observabilityconfig",
      "required": false
    },
    "--otlp-traces-endpoint": {
      "long_name": "--otlp-traces-endpoint",
      "short_name": null,
      "description": "OTLP_TRACES_ENDPOINT Target URL to which OpenTelemetry traces will be sent.",
      "default_value": null,
      "arg_type": "string",
      "choices": null,
      "is_flag": false,
      "section": "observabilityconfig",
      "required": false
    },
    "--show-hidden-metrics-for-version": {
      "long_name": "--show-hidden-metrics-for-version",
      "short_name": null,
      "description": "SHOW_HIDDEN_METRICS_FOR_VERSION Enable deprecated Prometheus metrics that have been hidden since the specified version. For example, if a previously deprecated metric has been hidden since the v0.7.0 release, you use `--show-hidden-metrics-for- version=0.7` as a temporary escape hatch while you migrate to new metrics. The metric is likely to be removed completely in an upcoming release.",
      "default_value": null,
      "arg_type": "boolean",
      "choices": null,
      "is_flag": false,
      "section": "observabilityconfig",
      "required": false
    },
    "--async-scheduling": {
      "long_name": "--async-scheduling",
      "short_name": null,
      "description": "--no-async-scheduling EXPERIMENTAL: If set to True, perform async scheduling. This may help reduce the CPU overheads, leading to better latency and throughput. However, async scheduling is currently not supported with some features such as structured outputs, speculative decoding, and pipeline parallelism.",
      "default_value": false,
      "arg_type": "boolean",
      "choices": null,
      "is_flag": true,
      "section": "schedulerconfig",
      "required": false
    },
    "--cuda-graph-sizes": {
      "long_name": "--cuda-graph-sizes",
      "short_name": null,
      "description": "CUDA_GRAPH_SIZES [CUDA_GRAPH_SIZES ...] Cuda graph capture sizes 1. if none provided, then default set to [min(max_num_seqs * 2, 512)] 2. if one value is provided, then the capture list would follow the pattern: [1, 2, 4] + [i for i in range(8, cuda_graph_sizes + 1, 8)] 3. more than one value (e.g. 1 2 128) is provided, then the capture list will follow the provided list.",
      "default_value": [],
      "arg_type": "list",
      "choices": null,
      "is_flag": false,
      "section": "schedulerconfig",
      "required": false
    },
    "--disable-chunked-mm-input": {
      "long_name": "--disable-chunked-mm-input",
      "short_name": null,
      "description": "--no-disable-chunked-mm-input If set to true and chunked prefill is enabled, we do not want to partially schedule a multimodal item. Only used in V1 This ensures that if a request has a mixed prompt (like text tokens TTTT followed by image tokens IIIIIIIIII) where only some image tokens can be scheduled (like TTTTIIIII, leaving IIIII), it will be scheduled as TTTT in one step and IIIIIIIIII in the next.",
      "default_value": false,
      "arg_type": "boolean",
      "choices": null,
      "is_flag": true,
      "section": "schedulerconfig",
      "required": false
    },
    "--disable-hybrid-kv-cache-manager": {
      "long_name": "--disable-hybrid-kv-cache-manager",
      "short_name": null,
      "description": "--no-disable-hybrid-kv-cache-manager If set to True, KV cache manager will allocate the same size of KV cache for all attention layers even if there are multiple type of attention layers like full attention and sliding window attention.",
      "default_value": false,
      "arg_type": "boolean",
      "choices": null,
      "is_flag": true,
      "section": "schedulerconfig",
      "required": false
    },
    "--enable-chunked-prefill": {
      "long_name": "--enable-chunked-prefill",
      "short_name": null,
      "description": "--no-enable-chunked-prefill If True, prefill requests can be chunked based on the remaining max_num_batched_tokens.",
      "default_value": null,
      "arg_type": "boolean",
      "choices": null,
      "is_flag": false,
      "section": "schedulerconfig",
      "required": false
    },
    "--long-prefill-token-threshold": {
      "long_name": "--long-prefill-token-threshold",
      "short_name": null,
      "description": "LONG_PREFILL_TOKEN_THRESHOLD For chunked prefill, a request is considered long if the prompt is longer than this number of tokens.",
      "default_value": 0,
      "arg_type": "integer",
      "choices": null,
      "is_flag": false,
      "section": "schedulerconfig",
      "required": false
    },
    "--max-long-partial-prefills": {
      "long_name": "--max-long-partial-prefills",
      "short_name": null,
      "description": "MAX_LONG_PARTIAL_PREFILLS For chunked prefill, the maximum number of prompts longer than long_prefill_token_threshold that will be prefilled concurrently. Setting this less than max_num_partial_prefills will allow shorter prompts to jump the queue in front of longer prompts in some cases, improving latency.",
      "default_value": 1,
      "arg_type": "list",
      "choices": null,
      "is_flag": false,
      "section": "schedulerconfig",
      "required": false
    },
    "--max-num-batched-tokens": {
      "long_name": "--max-num-batched-tokens",
      "short_name": null,
      "description": "MAX_NUM_BATCHED_TOKENS Maximum number of tokens to be processed in a single iteration. This config has no static default. If left unspecified by the user, it will be set in `EngineArgs.create_engine_config` based on the usage context.",
      "default_value": null,
      "arg_type": "list",
      "choices": null,
      "is_flag": false,
      "section": "schedulerconfig",
      "required": false
    },
    "--max-num-partial-prefills": {
      "long_name": "--max-num-partial-prefills",
      "short_name": null,
      "description": "MAX_NUM_PARTIAL_PREFILLS For chunked prefill, the maximum number of sequences that can be partially prefilled concurrently.",
      "default_value": 1,
      "arg_type": "list",
      "choices": null,
      "is_flag": false,
      "section": "schedulerconfig",
      "required": false
    },
    "--max-num-seqs": {
      "long_name": "--max-num-seqs",
      "short_name": null,
      "description": "MAX_NUM_SEQS Maximum number of sequences to be processed in a single iteration. This config has no static default. If left unspecified by the user, it will be set in `EngineArgs.create_engine_config` based on the usage context.",
      "default_value": null,
      "arg_type": "list",
      "choices": null,
      "is_flag": false,
      "section": "schedulerconfig",
      "required": false
    },
    "--num-lookahead-slots": {
      "long_name": "--num-lookahead-slots",
      "short_name": null,
      "description": "NUM_LOOKAHEAD_SLOTS The number of slots to allocate per sequence per step, beyond the known token ids. This is used in speculative decoding to store KV activations of tokens which may or may not be accepted. NOTE: This will be replaced by speculative config in the future; it is present to enable correctness tests until then.",
      "default_value": 0,
      "arg_type": "boolean",
      "choices": null,
      "is_flag": true,
      "section": "schedulerconfig",
      "required": false
    },
    "--preemption-mode": {
      "long_name": "--preemption-mode",
      "short_name": null,
      "description": "{recompute,swap,None} Whether to perform preemption by swapping or recomputation. If not specified, we determine the mode as follows: We use recomputation by default since it incurs lower overhead than swapping. However, when the sequence group has multiple sequences (e.g., beam search), recomputation is not currently supported. In such a case, we use swapping instead.",
      "default_value": null,
      "arg_type": "choice",
      "choices": [
        "recompute",
        "swap",
        "None"
      ],
      "is_flag": false,
      "section": "schedulerconfig",
      "required": false
    },
    "--scheduler-cls": {
      "long_name": "--scheduler-cls",
      "short_name": null,
      "description": "SCHEDULER_CLS The scheduler class to use. \"vllm.core.scheduler.Scheduler\" is the default scheduler. Can be a class directly or the path to a class of form \"mod.custom_class\".",
      "default_value": "vllm.core.scheduler.Scheduler",
      "arg_type": "list",
      "choices": null,
      "is_flag": false,
      "section": "schedulerconfig",
      "required": false
    },
    "--scheduler-delay-factor": {
      "long_name": "--scheduler-delay-factor",
      "short_name": null,
      "description": "SCHEDULER_DELAY_FACTOR Apply a delay (of delay factor multiplied by previous prompt latency) before scheduling next prompt.",
      "default_value": 0.0,
      "arg_type": "float",
      "choices": null,
      "is_flag": false,
      "section": "schedulerconfig",
      "required": false
    },
    "--scheduling-policy": {
      "long_name": "--scheduling-policy",
      "short_name": null,
      "description": "{fcfs,priority} The scheduling policy to use: - \"fcfs\" means first come first served, i.e. requests are handled in order of arrival. - \"priority\" means requests are handled based on given priority (lower value means earlier handling) and time of arrival deciding any ties).",
      "default_value": "fcfs",
      "arg_type": "choice",
      "choices": [
        "fcfs",
        "priority"
      ],
      "is_flag": false,
      "section": "schedulerconfig",
      "required": false
    },
    "--additional-config": {
      "long_name": "--additional-config",
      "short_name": null,
      "description": "ADDITIONAL_CONFIG Additional config for specified platform. Different platforms may support different configs. Make sure the configs are valid for the platform you are using. Contents must be hashable.",
      "default_value": {},
      "arg_type": "json",
      "choices": null,
      "is_flag": false,
      "section": "vllmconfig",
      "required": false
    },
    "--compilation-config": {
      "long_name": "--compilation-config",
      "short_name": null,
      "description": "COMPILATION_CONFIG, -O COMPILATION_CONFIG `torch.compile` and cudagraph capture configuration for the model. As a shorthand, `-O<n>` can be used to directly specify the compilation level `n`: `-O3` is equivalent to `-O.level=3` (same as `-O='{\"level\":3}'`). Currently, -O <n> and -O=<n> are supported as well but this will likely be removed in favor of clearer -O<n> syntax in the future. NOTE: level 0 is the default level without any optimization. level 1 and 2 are for internal testing only. level 3 is the recommended level for production, also default in V1. You can specify the full compilation config like so: `{\"level\": 3, \"cudagraph_capture_sizes\": [1, 2, 4, 8]}` Should either be a valid JSON string or JSON keys passed individually.",
      "default_value": "{\"level\":null,\"debug_du mp_path\":\"\",\"cache_dir\":\"\",\"backend\":\"\",\"custom_ops\":[ ],\"splitting_ops\":null,\"use_inductor\":true,\"compile_si zes\":null,\"inductor_compile_config\":{\"enable_auto_func tionalized_v2\":false},\"inductor_passes\":{},\"cudagraph_ mode\":null,\"use_cudagraph\":true,\"cudagraph_num_of_warm ups\":0,\"cudagraph_capture_sizes\":null,\"cudagraph_copy_ inputs\":false,\"full_cuda_graph\":false,\"pass_config\":{} ,\"max_capture_size\":null,\"local_cache_dir\":null}",
      "arg_type": "choice",
      "choices": [
        "\"level\":3"
      ],
      "is_flag": false,
      "section": "vllmconfig",
      "required": false
    },
    "--kv-events-config": {
      "long_name": "--kv-events-config",
      "short_name": null,
      "description": "KV_EVENTS_CONFIG The configurations for event publishing. Should either be a valid JSON string or JSON keys passed individually.",
      "default_value": null,
      "arg_type": "json",
      "choices": null,
      "is_flag": false,
      "section": "vllmconfig",
      "required": false
    },
    "--kv-transfer-config": {
      "long_name": "--kv-transfer-config",
      "short_name": null,
      "description": "KV_TRANSFER_CONFIG The configurations for distributed KV cache transfer. Should either be a valid JSON string or JSON keys passed individually.",
      "default_value": null,
      "arg_type": "json",
      "choices": null,
      "is_flag": false,
      "section": "vllmconfig",
      "required": false
    },
    "--speculative-config": {
      "long_name": "--speculative-config",
      "short_name": null,
      "description": "SPECULATIVE_CONFIG Speculative decoding configuration. Should either be a valid JSON string or JSON keys passed individually.",
      "default_value": null,
      "arg_type": "json",
      "choices": null,
      "is_flag": false,
      "section": "vllmconfig",
      "required": false
    },
    "--json-arg": {
      "long_name": "--json-arg",
      "short_name": null,
      "description": "'{\"key4\": [\"value3\", \"value4\", \"value5\"]}'",
      "default_value": null,
      "arg_type": "choice",
      "choices": [
        "\"key4\": [\"value3\"",
        "\"value4\"",
        "\"value5\"]"
      ],
      "is_flag": false,
      "section": "vllmconfig",
      "required": false
    },
    "--json-arg.key1": {
      "long_name": "--json-arg.key1",
      "short_name": null,
      "description": "value1 --json-arg.key2.key3 value2",
      "default_value": null,
      "arg_type": "json",
      "choices": null,
      "is_flag": false,
      "section": "vllmconfig",
      "required": false
    },
    "--json-arg.key4+": {
      "long_name": "--json-arg.key4+",
      "short_name": null,
      "description": "value3 --json-arg.key4+='value4,value5'",
      "default_value": null,
      "arg_type": "json",
      "choices": null,
      "is_flag": false,
      "section": "vllmconfig",
      "required": false
    }
  },
  "sections": {
    "options": [
      "--api-server-count",
      "--config",
      "--disable-log-requests",
      "--disable-log-stats",
      "--enable-log-requests",
      "--enable-prompt-adapter",
      "--headless"
    ],
    "frontend": [
      "--allow-credentials",
      "--allowed-headers",
      "--allowed-methods",
      "--allowed-origins",
      "--api-key",
      "--chat-template",
      "--chat-template-content-format",
      "--disable-fastapi-docs",
      "--disable-frontend-multiprocessing",
      "--disable-uvicorn-access-log",
      "--enable-auto-tool-choice",
      "--enable-force-include-usage",
      "--enable-log-outputs",
      "--enable-prompt-tokens-details",
      "--enable-request-id-headers",
      "--enable-server-load-tracking",
      "--enable-ssl-refresh",
      "--enable-tokenizer-info-endpoint",
      "--exclude-tools-when-tool-choice-none",
      "--h11-max-header-count",
      "--h11-max-incomplete-event-size",
      "--host",
      "--log-config-file",
      "--lora-modules",
      "--max-log-len",
      "--middleware",
      "--port",
      "--response-role",
      "--return-tokens-as-token-ids",
      "--root-path",
      "--ssl-ca-certs",
      "--ssl-cert-reqs",
      "--ssl-certfile",
      "--ssl-keyfile",
      "--tool-call-parser",
      "--tool-parser-plugin",
      "--tool-server",
      "--uds",
      "--uvicorn-log-level"
    ],
    "modelconfig": [
      "--allowed-local-media-path",
      "--code-revision",
      "--config-format",
      "--convert",
      "--disable-async-output-proc",
      "--disable-cascade-attn",
      "--disable-sliding-window",
      "--dtype",
      "--enable-prompt-embeds",
      "--enable-sleep-mode",
      "--enforce-eager",
      "--generation-config",
      "--hf-config-path",
      "--hf-overrides",
      "--hf-token",
      "--logits-processor-pattern",
      "--logits-processors",
      "--logprobs-mode",
      "--max-logprobs",
      "--max-model-len",
      "--max-seq-len-to-capture",
      "--model-impl",
      "--override-attention-dtype",
      "--override-generation-config",
      "--override-neuron-config",
      "--override-pooler-config",
      "--quantization",
      "--revision",
      "--rope-scaling",
      "--rope-theta",
      "--runner",
      "--seed",
      "--served-model-name",
      "--skip-tokenizer-init",
      "--task",
      "--tokenizer",
      "--tokenizer-mode",
      "--tokenizer-revision",
      "--trust-remote-code"
    ],
    "loadconfig": [
      "--download-dir",
      "--ignore-patterns",
      "--load-format",
      "--model-loader-extra-config",
      "--pt-load-map-location",
      "--use-tqdm-on-load"
    ],
    "decodingconfig": [
      "--guided-decoding-backend",
      "--guided-decoding-disable-additional-properties",
      "--guided-decoding-disable-any-whitespace",
      "--guided-decoding-disable-fallback",
      "--reasoning-parser"
    ],
    "parallelconfig": [
      "--data-parallel-address",
      "--data-parallel-backend",
      "--data-parallel-hybrid-lb",
      "--data-parallel-rank",
      "--data-parallel-rpc-port",
      "--data-parallel-size",
      "--data-parallel-size-local",
      "--data-parallel-start-rank",
      "--disable-custom-all-reduce",
      "--distributed-executor-backend",
      "--enable-eplb",
      "--enable-expert-parallel",
      "--enable-multimodal-encoder-data-parallel",
      "--eplb-log-balancedness",
      "--eplb-step-interval",
      "--eplb-window-size",
      "--max-parallel-loading-workers",
      "--num-redundant-experts",
      "--pipeline-parallel-size",
      "--ray-workers-use-nsight",
      "--tensor-parallel-size",
      "--worker-cls",
      "--worker-extension-cls"
    ],
    "cacheconfig": [
      "--block-size",
      "--calculate-kv-scales",
      "--cpu-offload-gb",
      "--enable-prefix-caching",
      "--gpu-memory-utilization",
      "--kv-cache-dtype",
      "--kv-sharing-fast-prefill",
      "--mamba-cache-dtype",
      "--mamba-ssm-cache-dtype",
      "--num-gpu-blocks-override",
      "--prefix-caching-hash-algo",
      "--swap-space"
    ],
    "multimodalconfig": [
      "--interleave-mm-strings",
      "--limit-mm-per-prompt",
      "--media-io-kwargs",
      "--mm-processor-cache-gb",
      "--mm-processor-kwargs",
      "--skip-mm-profiling"
    ],
    "loraconfig": [
      "--default-mm-loras",
      "--enable-lora",
      "--enable-lora-bias",
      "--fully-sharded-loras",
      "--lora-dtype",
      "--lora-extra-vocab-size",
      "--max-cpu-loras",
      "--max-lora-rank",
      "--max-loras"
    ],
    "observabilityconfig": [
      "--collect-detailed-traces",
      "--otlp-traces-endpoint",
      "--show-hidden-metrics-for-version"
    ],
    "schedulerconfig": [
      "--async-scheduling",
      "--cuda-graph-sizes",
      "--disable-chunked-mm-input",
      "--disable-hybrid-kv-cache-manager",
      "--enable-chunked-prefill",
      "--long-prefill-token-threshold",
      "--max-long-partial-prefills",
      "--max-num-batched-tokens",
      "--max-num-partial-prefills",
      "--max-num-seqs",
      "--num-lookahead-slots",
      "--preemption-mode",
      "--scheduler-cls",
      "--scheduler-delay-factor",
      "--scheduling-policy"
    ],
    "vllmconfig": [
      "--additional-config",
      "--compilation-config",
      "--kv-events-config",
      "--kv-transfer-config",
      "--speculative-config",
      "--json-arg",
      "--json-arg.key1",
      "--json-arg",
      "--json-arg.key4+"
    ]
  }
}